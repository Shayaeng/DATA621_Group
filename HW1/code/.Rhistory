read_csv("..\data\moneyball-evaluation-data.csv")
library(readr)
read_csv("..\\data\\moneyball-evaluation-data.csv")
train <- read_csv("..\\data\\moneyball-training-data.csv")
which(isna(train))
which(is_na(train))
which(is.na(train))
train
train[16009]
train[16009,]
# Selects all rows where sum of NA's in the row is not equal to column number
# This will remove all rows that are completely filled with NA values
train_clean1 <- train[rowSums(is.na(train)) != ncol(train), ]
train_clean1
which(is.na(train(train_clean1)))
which(is.na(train_clean1))
train_clean1[16009,]
train_clean1 <- train[rowSums(is.na(train)) != ncol(train), ]
train_clean1[16009,]
rowSums(is.na(train_clean1[16009,]))
ncol(train)
train[rowSums(is.na(train)) != ncol(train), ]
train
rowSums(is.na(train))
library(dplyr)
mat <- rowSums(is.na(train))
mat[mat = 17]
mat
train[rowSums(is.na(train)) != ncol(train), ]
is.na(train)
train %>% filter(if_any(everything(), ~ !is.na(.)))
complete <- complete.cases(train)
complete
train <- train[, colSums(is.na(train)) < nrow(train)] # Sum the number of NA values in each column, compare against number of rows, select only columns that are not complete NA
train <- train[, colSums(is.na(train)) < nrow(train)] # Sum the number of NA values in each column, compare against number of rows, select only columns that are not complete NA
train <- train[, colSums(is.na(train))<nrow(train)] # Sum the number of NA values in each column, compare against number of rows, select only columns that are not complete NA
train <- train[,colSums(is.na(train))<nrow(train)] # Sum the number of NA values in each column, compare against number of rows, select only columns that are not complete NA
train[,colSums(is.na(train))<nrow(train)] # Sum the number of NA values in each column, compare against number of rows, select only columns that are not complete NA
test <- read_csv("..\\data\\moneyball-evaluation-data.csv")
train <- read_csv("..\\data\\moneyball-training-data.csv")
train <- train[,colSums(is.na(train))<nrow(train)] # Sum the number of NA values in each column, compare against number of rows, select only columns that are not complete NA
train <- train %>% select(where(not_all_na))
not_all_na <- function(x) any(!is.na(x))
train <- train %>% select(where(not_all_na))
train <- train %>% select(where(~!all(is.na(.x))))
train
train <- train %>% select(where(~!all(is.na(x))))
train <- train %>% select(where(~!all(is.na(train))))
train <- train %>% select(where(any(!is.na(train))))
not_all_na <- function(x) any(!is.na(x))
train %>% select(where(not_all_na))
train <- train %>% select(where(not_all_na))
percentMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(train,2,pMiss)
percentMiss <- function(x){sum(is.na(x))/length(x)*100}
apply(train,2,percentMiss)
apply(train,1,percentMiss)
percentMiss <- function(x){sum(is.na(x))/length(x)*100} # Creates percentage of missing values
variable_pMiss <- apply(train,2,percentMiss) # runs on columns
sample_pMiss <- apply(train,1,percentMiss) # runs on rows
variable_pMiss
sample_pMiss
sample_pMiss > 50
sum(sample_pMiss > 50)
#Filtering for instances where the entire column is NA
not_all_na <- function(x) any(!is.na(x))
# Create a function since where() only works with functions
# !is.na(x) returns a vector of T/F if it is not an NA value
# any() checks to see if any values in the vector are TRUE
train <- train %>% select(where(not_all_na)) # Selects only columns that are not completely NA
train %>% select(where(not_all_na))
train <- train %>% select(where(not_all_na)) # Selects only columns that are not completely NA
train_cleaned <- train %>% select(where(not_all_na)) # Selects only columns that are not completely NA
library(mice)
train_cleaned <- train_cleaned %>% select (-TEAM_BATTING_HBP)
md.pattern(train_cleaned)
train_cleaned <- train_cleaned %>% select (-TEAM_BATTING_HBP, -Index)
train_cleaned <- train_cleaned %>% select (-TEAM_BATTING_HBP, -INDEX)
#Filters for instances where the entire row is NA
train <- train %>%
filter(if_any(everything(), ~ !is.na(.))) #keep rows that have atleast one value that is not NA
#if_any : https://www.tidyverse.org/blog/2021/02/dplyr-1-0-4-if-any/
#         https://dplyr.tidyverse.org/reference/across.html
library(readr)
library(dplyr)
library(mice)
library(readr)
library(dplyr)
library(mice)
